# Node Admin Info and should change email and password
nodeAdminEmail = "admin@localhost"
nodeAdminPass = "a"
nodeAdminName =  "NodeAdmin QueenSplicious"
#MongoDB configuration
dbHost = "127.0.0.1"
dbPort = "27017"
#Session Support
sessionTimeoutMinutes = 5  // number of minutes of no traffic to wait before invalidating sessionURI
pongTimeoutSeconds = 7  // number of seconds to wait on ping, before sending pong
#----OmniRPC config----
#Uncomment the following to enable Omni Support.
#not that the 18332 port is for testnet only.  Use port 8332 for mainnet, although this is definitely not recommended as yet.
OmniRPCURI = "http://52.38.13.42:18332/"
OmniRPCUser = "rpc"
OmniRPCPass = "pass"
# Agent configuration file and deploymentMode options are distributed and colocated.
deploymentMode = "colocated"
# comm link between GLoSEval and Diesel for DSL Evaluation
DSLCommLinkServerHost = "127.0.0.1"
DSLCommLinkServerPort = 5672
DSLCommLinkClientHost = "127.0.0.1"
DSLCommLinkClientPort = 5672
# Diesel configuration for DSL Evaluation
DSLEvaluatorHost = "127.0.0.1"
DSLEvaluatorPort = 5672
DSLEvaluatorHostData = "/dieselProtocol"
DSLEvaluatorPreferredSupplierHost = "127.0.0.1"
DSLEvaluatorPreferredSupplierHost =  "52.26.206.19" # "api.livelygig.com" 
DSLEvaluatorPreferredSupplierPort = 5672
DSLEvaluatorNetwork = { }
# Diesel configuration for BFactory service
BFactoryCommLinkServerHost = "127.0.0.1"
#BFactoryCommLinkServerHost = "api.livelygig.com"
BFactoryCommLinkServerPort = 5672
BFactoryCommLinkClientHost = "127.0.0.1"
BFactoryCommLinkClientPort = 5672
BFactoryEvaluatorHost = "127.0.0.1"
BFactoryEvaluatorPort = 5672
BFactoryEvaluatorHostData = "/bFactoryProtocol"
BFactoryMap = {
  introductionInitiator = { 
    cnxn = {
      src = "introductionCnxn"
      label = "initiation"
      trgt = "introductionCnxn"
    }
    label = "behaviors( introduction( initiator( true ), Alias ) )"
    class = "com.protegra_ati.agentservices.protocols.IntroductionInitiator"
    }
  introductionRecipient = { 
    cnxn = {
      src = "introductionCnxn"
      label = "receipt"
      trgt = "introductionCnxn"
    }
    label = "behaviors( introduction( recipient( true ), Cnxn ) )"
    class = "com.protegra_ati.agentservices.protocols.IntroductionRecipient"
    }     
  claimantBehavior = {
   cnxn = {
     src = "verifierProtocol"
      label = "verifierProtocol"
      trgt = "verifierProtocol"
   }   
   label = "claimant(true)"
   class = "com.protegra_ati.agentservices.protocols.ClaimantBehavior"
  }  
  verifierBehavior = {
    cnxn = {
      src = "verifierProtocol"
      label = "verifierProtocol"
      trgt = "verifierProtocol"
    }
    label = "verifier(true)"
    class = "com.protegra_ati.agentservices.protocols.VerifierBehavior"
  }
  relyingPartyBehavior = {
    cnxn = {
      src = "verifierProtocol"
      label = "verifierProtocol"
      trgt = "verifierProtocol"
    }
    label = "relyingParty(true)"
    class = "com.protegra_ati.agentservices.protocols.RelyingPartyBehavior"
  }
}
ImporterServiceHost = "127.0.0.1"
ImporterServicePort = 9876
ImporterServiceDemoDataFile = "src/main/resources/sample-data-demo.json"
MongodbPath = "/home/devsyn/mnt/dev/mongodb/mongodb-linux-x86_64-2.4.14/bin"
